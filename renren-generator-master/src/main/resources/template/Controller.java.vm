package ${package}.${moduleName}.controller;

import java.util.Arrays;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import ${package}.${moduleName}.entity.${className}Entity;
import ${package}.${moduleName}.service.${className}Service;
import ${mainPath}.com.utils.mybatisplus.PageUtils;
import ${mainPath}.com.utils.resultutil.R;



/**
 * ${comments}
 *
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@RestController
@RequestMapping("${moduleName}/${pathName}")
@Api(description = "${comments}")
public class ${className}Controller {
    @Autowired
    private ${className}Service ${classname}Service;

    /**
     * 列表
     */
    @GetMapping("/list/{page}/{limit}")
    @ApiOperation("条件查询带分页")
    public R list(@PathVariable(value = "page") Integer page,
                  @PathVariable(value = "limit") Integer limit,
                  @RequestBody(required = false) ${className}Entity ${className}Entity){


        Map<String, Object> map = new HashMap<>();
        map.put("page", page);
        map.put("limit", limit);
        PageUtils pages = ${classname}Service.queryPage(map, ${className}Entity);
        map.clear();

        map.put("totalCount",pages.getTotalCount());
        map.put("list",pages.getList());

        return R.ok().data(map);
    }


    /**
     * 信息
     */
    @GetMapping("/info/{${pk.attrname}}")
    @ApiOperation("信息")
    public R info(@PathVariable("${pk.attrname}") ${pk.attrType} ${pk.attrname}){
		${className}Entity ${classname} = ${classname}Service.getById(${pk.attrname});

        return R.ok().data("${classname}", ${classname});
    }

    /**
     * 保存
     */
    @PostMapping("/save")
    @ApiOperation("保存")
    public R save(@RequestBody ${className}Entity ${classname}){
		${classname}Service.save(${classname});

        return R.ok();
    }

    /**
     * 修改
     */
    @PostMapping("/update")
    @ApiOperation("修改")
    public R update(@RequestBody ${className}Entity ${classname}){
		${classname}Service.updateById(${classname});

        return R.ok();
    }

    /**
     * 删除
     */
    @DeleteMapping("/delete")
    @ApiOperation("删除")
    public R delete(@RequestBody ${pk.attrType}[] ${pk.attrname}s){
		${classname}Service.removeByIds(Arrays.asList(${pk.attrname}s));

        return R.ok();
    }

}
